[{"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/index.js":"1","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/App.js":"2","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/index.js":"3","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/csrf.js":"4","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/session.js":"5"},{"size":785,"mtime":1611374110804,"results":"6","hashOfConfig":"7"},{"size":84,"mtime":1611353983491,"results":"8","hashOfConfig":"7"},{"size":681,"mtime":1611374294869,"results":"9","hashOfConfig":"7"},{"size":1512,"mtime":1611368298258,"results":"10","hashOfConfig":"7"},{"size":1133,"mtime":1611370545563,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jjbtzq",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/App.js",[],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/csrf.js",[],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/session.js",["24"],"import { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user,\n    };\n};\n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER,\n    };\n};\n\nexport const login = (user) => async (dispatch) => {\n    const { credential, password } = user;\n    const response = await fetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify({\n            credential,\n            password,\n        }),\n    });\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_USER:\n            newState = Object.assign({}, state);\n            newState.user = action.payload;\n            return newState;\n        case REMOVE_USER:\n            newState = Object.assign({}, state);\n            newState.user = null;\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default sessionReducer;",["25","26"],{"ruleId":"27","severity":1,"message":"28","line":13,"column":7,"nodeType":"29","messageId":"30","endLine":13,"endColumn":17},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"no-unused-vars","'removeUser' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-global-assign","no-unsafe-negation"]