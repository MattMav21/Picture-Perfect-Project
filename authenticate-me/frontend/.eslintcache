[{"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/index.js":"1","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/App.js":"2","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/index.js":"3","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/csrf.js":"4","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/session.js":"5","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/components/LoginFormPage/index.js":"6","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/components/SignupFormPage/index.js":"7"},{"size":785,"mtime":1611374110804,"results":"8","hashOfConfig":"9"},{"size":743,"mtime":1611381965862,"results":"10","hashOfConfig":"9"},{"size":681,"mtime":1611374294869,"results":"11","hashOfConfig":"9"},{"size":1512,"mtime":1611368298258,"results":"12","hashOfConfig":"9"},{"size":1647,"mtime":1611381774054,"results":"13","hashOfConfig":"9"},{"size":1821,"mtime":1611379419577,"results":"14","hashOfConfig":"9"},{"size":2619,"mtime":1611382627663,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jjbtzq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/index.js",[],["33","34"],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/App.js",[],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/csrf.js",[],"/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/store/session.js",["35"],"import { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user,\n    };\n};\n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER,\n    };\n};\n\nexport const restoreUser = () => async dispatch => {\n    const res = await fetch('/api/session');\n    dispatch(setUser(res.data.user));\n    return res;\n};\n\nexport const login = (user) => async (dispatch) => {\n    const { credential, password } = user;\n    const response = await fetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify({\n            credential,\n            password,\n        }),\n    });\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nexport const signup = (user) => async (dispatch) => {\n    const { username, email, password } = user;\n    const response = await fetch(\"/api/users\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            username,\n            email,\n            password,\n        }),\n    });\n    dispatch(setUser(response.data.user));\n    return response;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_USER:\n            newState = Object.assign({}, state);\n            newState.user = action.payload;\n            return newState;\n        case REMOVE_USER:\n            newState = Object.assign({}, state);\n            newState.user = null;\n            return newState;\n        default:\n            return state;\n    }\n};\n\n\nexport default sessionReducer;","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/components/LoginFormPage/index.js",["36"],"import React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport glittery from '../../assets/PinkIsPretty.jpg';\nimport './LoginForm.css';\n\nfunction LoginFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [credential, setCredential] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return (\n        <Redirect to=\"/\" />\n    );\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setErrors([]);\n        return dispatch(sessionActions.login({ credential, password }))\n            .catch((res) => {\n                if (res.data && res.data.errors) setErrors(res.data.errors);\n            });\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"login-form\">\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label>\n                Username or Email\n                <br></br>\n        <input\n                    type=\"text\"\n                    value={credential}\n                    onChange={(e) => setCredential(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Password\n                <br></br>\n        <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\" className=\"login-button\">Log In</button>\n        </form>\n    );\n}\n\nexport default LoginFormPage;","/Users/matthewhasan/Project/React-Solo-Project/authenticate-me/frontend/src/components/SignupFormPage/index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":7,"nodeType":"43","messageId":"44","endLine":13,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":16},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'removeUser' is assigned a value but never used.","Identifier","unusedVar","'glittery' is defined but never used.","no-global-assign","no-unsafe-negation"]