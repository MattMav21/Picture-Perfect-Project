[{"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/index.js":"1","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/App.js":"2","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/picture.js":"3","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/session.js":"4","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/csrf.js":"5","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/index.js":"6","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/index.js":"7","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/SignupFormPage/index.js":"8","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/LoginFormPage/index.js":"9","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/MainPage/index.js":"10","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/PictureUploadForm/index.js":"11","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Picture/index.js":"12","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js":"13","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/UserPage/index.js":"14","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/_buttons/DeletePictureButton.js":"15"},{"size":878,"mtime":1611943607226,"results":"16","hashOfConfig":"17"},{"size":1495,"mtime":1612143940115,"results":"18","hashOfConfig":"17"},{"size":3725,"mtime":1617828345980,"results":"19","hashOfConfig":"17"},{"size":2469,"mtime":1612134780535,"results":"20","hashOfConfig":"17"},{"size":1672,"mtime":1611943607229,"results":"21","hashOfConfig":"17"},{"size":750,"mtime":1611943607230,"results":"22","hashOfConfig":"17"},{"size":2496,"mtime":1612143940118,"results":"23","hashOfConfig":"17"},{"size":3583,"mtime":1611943607216,"results":"24","hashOfConfig":"17"},{"size":1882,"mtime":1611943607206,"results":"25","hashOfConfig":"17"},{"size":1334,"mtime":1612153007797,"results":"26","hashOfConfig":"17"},{"size":3042,"mtime":1611943607212,"results":"27","hashOfConfig":"17"},{"size":2121,"mtime":1612153149332,"results":"28","hashOfConfig":"17"},{"size":1440,"mtime":1611943607207,"results":"29","hashOfConfig":"17"},{"size":3044,"mtime":1617829149536,"results":"30","hashOfConfig":"17"},{"size":1095,"mtime":1617827801219,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1kqevk0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/index.js",[],["69","70"],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/App.js",["71"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginFormPage from './components/LoginFormPage';\nimport SignupFormPage from './components/SignupFormPage';\nimport * as sessionActions from './store/session';\nimport Navigation from './components/Navigation';\nimport MainPage from './components/MainPage';\nimport Picture from './components/Picture';\nimport configureStore from './store';\nimport PictureUploadForm from './components/PictureUploadForm';\nimport UserPage from './components/UserPage';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch])\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginFormPage />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n          <Route exact path=\"/users/:userId\">\n            <UserPage />\n          </Route>\n          <Route exact path=\"/pictures\" >\n            <PictureUploadForm />\n          </Route>\n          <Route exact path=\"/pictures/:pictureId\" >\n            <Picture />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/picture.js",["72","73","74"],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/session.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/csrf.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/index.js",["75"],"import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\nimport logo from '../../assets/PicturePerfectLogo.png';\n\nfunction Navigation({ isLoaded }) {\n    const [myPage, setMyPage] = useState(0);\n\n    const sessionUser = useSelector(state => state.session.user);\n\n    let sessionLinks;\n    if (sessionUser) {\n        sessionLinks = (\n            <ProfileButton user={sessionUser} />\n        );\n    } else {\n        sessionLinks = (\n            <>\n                <NavLink to=\"/login\" style={{ textDecoration: \"none\" }}>Log In</NavLink>\n                <NavLink to=\"/signup\" style={{ textDecoration: \"none\" }}>Sign Up</NavLink>\n            </>\n        );\n    }\n\n    useEffect(() => {\n        if (sessionUser) {\n            setMyPage(sessionUser.id || 0)\n        }\n    })\n\n    return (\n        <nav className=\"navbar\">\n            <a href=\"/\"><img className=\"logo\" src={logo} alt=\"logo\" /></a>\n            <br></br>\n            <NavLink className=\"navbar-link\" exact to={`/users/${myPage}`} style={{ textDecoration: \"none\", padding: \"0 0 0 10px\" }}>My Page</NavLink>\n            <NavLink className=\"navbar-link\" exact to=\"/pictures\" style={{ textDecoration: \"none\", padding: \"0 0 0 10px\" }}>Upload a picture!</NavLink>\n            {isLoaded && sessionLinks}\n        </nav>\n    );\n}\n\nexport default Navigation;\n\n// import React from 'react';\n// import { NavLink } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import ProfileButton from './ProfileButton';\n// import './Navigation.css';\n\n// function Navigation({ isLoaded }) {\n//     const sessionUser = useSelector(state => state.session.user);\n\n//     let sessionLinks;\n//     if (sessionUser) {\n//         sessionLinks = (\n//             <ProfileButton user={sessionUser} />\n//         );\n//     } else {\n//         sessionLinks = (\n//             <>\n//                 <i class=\"fas fa-glass-cheers\"></i>\n//                 <NavLink to=\"/login\"><i class=\"fas fa-lock\"></i></NavLink>\n//                 <NavLink to=\"/signup\"><i class=\"fas fa-user-plus\"></i></NavLink>\n//             </>\n//         );\n//     }\n\n//     return (\n//         <ul>\n//             <li>\n//                 <NavLink exact to=\"/\" className=\"navbar\">Home</NavLink>\n//                 {isLoaded && sessionLinks}\n//             </li>\n//         </ul>\n//     );\n// }\n\n// export default Navigation;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/SignupFormPage/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/LoginFormPage/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/MainPage/index.js",["76","77"],"import React, { useEffect, useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport * as pictureActions from '../../store/picture';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MainPage.css';\n\n//import data\n// use effect to dispatch a thunk that fetches all images.\n// use selector to subscribe to images/get access to pictures\n// map over pictures to renders\n\n//Needs to show all of the pictures that have been uploaded.\n    //Preferably in order from newest to oldest.\n\nconst MainPage = () => {\n    const dispatch = useDispatch();\n    const { getPictures } = pictureActions;\n\n    useEffect(() => {\n        dispatch(getPictures())\n    }, [dispatch, getPictures])\n    const pictures = useSelector((state) => state.picture);\n\n    return (\n    <>\n        <h1>Main Page!</h1>\n            <div className=\"picture-cluster\">\n            { pictures !== undefined && pictures.length > 1 && pictures.map((pics) => \n                <a href={`/pictures/${pics.id}`} key={pics.id}>\n                    {/* <label>Uploaded by {pics.userId}</label> */}\n                    <br></br>\n                    <img className=\"uploaded-picture\" src={pics.imageLink} alt=\"uploaded\" />\n                    <br></br>\n                </a>\n            )}\n            </div>\n    </>)\n}\n\nexport default MainPage;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/PictureUploadForm/index.js",["78","79"],"import React, { useEffect, useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport * as pictureActions from '../../store/picture';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './PictureUploadForm.css';\nimport { Redirect, useHistory } from 'react-router-dom';\n\n// Form needs to contain input for\n    //the image source\n    //a title for the image (optional)\n    //a description for the image (optional)\n    //any tags associated with the image (optional)\n\n    //posts to: TBD\n\nconst PictureUploadForm = () => {\n    const sessionUser = useSelector((state) => state.session.user);\n\n    const [image, setImage] = useState(null);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    // const [tags, setTags] = useState([]);\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    // const picture = useSelector((state) => state.picture);\n\n\n\n    if (!sessionUser) return <Redirect to=\"/login\" />;\n\n    const userId = sessionUser.id;\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        return dispatch(pictureActions.uploadPicture({ image, title, description, userId })).then(() => history.push('/'))\n    }\n\n    const updateFile = (e) => {\n        const file = e.target.files[0];\n        if (file) setImage(file);\n    };\n\n    return (\n        <>\n            <h1>Picture Upload!!!</h1>\n            <form onSubmit={handleSubmit} className=\"picture-upload-form\" action=\"/\" method=\"POST\">\n                <label>\n                    Upload an image!\n                    <br></br>\n                    <input \n                        type=\"file\" \n                        accept=\"image/png, image/jpeg\"\n                        // onChange={(e) => setImage(e.target.value)} \n                        // onChange={(e) => setImage(`http://${e.target.files.name}`)} \n                        onChange={updateFile} \n                    />\n                    \n                    \n                </label>\n                <br></br>\n                <br></br>\n                <label>\n                    Title:\n                    <br></br>\n                    <input \n                        type=\"text\" \n                        onChange={(e) => setTitle(e.target.value)} \n                        value={title} \n                    />\n                    <br></br>\n                    <br></br>\n                    <label>\n                    Description:\n                    <br></br>\n                    <textarea \n                        className=\"description\"\n                        type=\"text\"\n                        onChange={(e) => setDescription(e.target.value)}\n                        value={description}\n                    />\n                    </label>\n                </label>\n                <br></br>\n                <br></br>\n                <button disabled={!image ? true : false} type=\"submit\">Add your picture!</button>\n            </form>\n        </>\n    )\n}\n\nexport default PictureUploadForm;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Picture/index.js",["80","81"],"import React, { useEffect, useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Picture.css';\nimport { useParams } from 'react-router-dom';\nimport * as pictureActions from '../../store/picture';\n\n//Will use useParams to get the pictureId.\n//Needs to display\n     //the image\n     //who uploaded it\n     //any descriptions or tags\n     //comments\n\nconst Picture = () => {\n    const { pictureId } = useParams();\n    const dispatch = useDispatch();\n    const picture = useSelector((state) => state.picture.picture);\n    const thisUser = useSelector((state) => state.picture.user);\n    const [username, setUsername] = useState('')\n    const [userId, setUserId] = useState(0);\n\n    const { getOnePicture } = pictureActions;\n\n    useEffect(() => {\n        dispatch(getOnePicture(pictureId))\n    }, [dispatch, getOnePicture, pictureId])\n\n    useEffect(() => {\n        if (thisUser) {\n            setUsername(thisUser.username || '');\n            setUserId(thisUser.id || 0);\n        }\n    })\n\n    // const correctPicture = pictures.find((pic) => pic.id === pictureId)\n\n    // const loadedPictures = pictures.length > 0 ? pictures : null;\n    \n    return (\n        <>\n            {/* <h1>Pictures!!!</h1> */}\n            <h1>Uploaded by <a href={`/users/${userId}`}>{username}</a></h1>\n            { picture !== undefined && \n            <div className=\"picture-div\">\n                <h2 className=\"title\">{picture.title}</h2>\n                <img className=\"uploaded-picture\" src={picture.imageLink} alt=\"uploaded\" />\n                <div className=\"description-area\">{picture.description}</div>\n            </div>\n            }\n            {/* { pictures !== undefined && pictures.length > 1 && pictures.map((pics) => <a href={`/pictures/${pics.id}`}><img className=\"uploaded-picture\" src={pics.imageLink} alt=\"uploaded\" /></a>)} */}\n            {/* { pictures !== undefined && pictures.length > 1 && <img className=\"uploaded-picture\" src={correctPicture.imageLink} alt=\"uploaded\" /> } */}\n        </>\n    )\n}\n\nexport default Picture;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/UserPage/index.js",["82"],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/_buttons/DeletePictureButton.js",["83","84"],"import React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport * as pictureActions from \"../../store/picture\";\n\nconst DeletePictureButton = (props) => {\n    const [loaded, setLoaded] = useState(false);\n    const { destroyPicture, getPictures } = pictureActions;\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const { picId } = props;\n\n    const deletePicture = async (e) => {\n        if (window.confirm(`Are you sure you want to delete ${picId}?`)) {\n\n            await dispatch(destroyPicture(picId)).then(() =>\n                dispatch(getPictures())\n                    .then(() => setLoaded(true)))\n                .then(() => history.push(`/`))\n\n\n            //dispatch action that deletes Roster_Member\n            //then dispatch getOneRoster\n            //then dispatch getMembers\n            //then set loaded to true\n        } else {\n            return\n        }\n\n    };\n\n    return <button onClick={deletePicture}> DELETE </button>;\n};\n\nexport default DeletePictureButton;",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":75,"column":9,"nodeType":"91","messageId":"92","endLine":75,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":78,"column":13,"nodeType":"91","messageId":"92","endLine":78,"endColumn":16},{"ruleId":"89","severity":1,"message":"95","line":79,"column":13,"nodeType":"91","messageId":"92","endLine":79,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":27,"column":5,"nodeType":"91","endLine":27,"endColumn":14,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":1,"column":28,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"100","line":2,"column":13,"nodeType":"91","messageId":"92","endLine":2,"endColumn":27},{"ruleId":"89","severity":1,"message":"101","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"100","line":2,"column":13,"nodeType":"91","messageId":"92","endLine":2,"endColumn":27},{"ruleId":"89","severity":1,"message":"100","line":2,"column":13,"nodeType":"91","messageId":"92","endLine":2,"endColumn":27},{"ruleId":"96","severity":1,"message":"102","line":29,"column":5,"nodeType":"91","endLine":29,"endColumn":14,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"100","line":2,"column":13,"nodeType":"91","messageId":"92","endLine":2,"endColumn":27},{"ruleId":"89","severity":1,"message":"104","line":3,"column":22,"nodeType":"91","messageId":"92","endLine":3,"endColumn":31},{"ruleId":"89","severity":1,"message":"105","line":7,"column":12,"nodeType":"91","messageId":"92","endLine":7,"endColumn":18},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'configureStore' is defined but never used.","Identifier","unusedVar","'entryObj' is assigned a value but never used.","'key' is assigned a value but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMyPage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [sessionUser] as a second argument to the useEffect Hook.",["108"],"'useState' is defined but never used.","'sessionActions' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect contains a call to 'setUsername'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [thisUser] as a second argument to the useEffect Hook.",["109"],"'useParams' is defined but never used.","'loaded' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Add dependencies array: [sessionUser]",{"range":"114","text":"115"},"Add dependencies array: [thisUser]",{"range":"116","text":"117"},[921,921],", [sessionUser]",[1076,1076],", [thisUser]"]