[{"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/index.js":"1","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/App.js":"2","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/picture.js":"3","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/session.js":"4","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/csrf.js":"5","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/index.js":"6","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/index.js":"7","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/SignupFormPage/index.js":"8","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/LoginFormPage/index.js":"9","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/MainPage/index.js":"10","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/PictureUploadForm/index.js":"11","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Picture/index.js":"12","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js":"13","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/UserPage/index.js":"14"},{"size":878,"mtime":1611943607226,"results":"15","hashOfConfig":"16"},{"size":1495,"mtime":1612143940115,"results":"17","hashOfConfig":"16"},{"size":3092,"mtime":1612143940119,"results":"18","hashOfConfig":"16"},{"size":2469,"mtime":1612134780535,"results":"19","hashOfConfig":"16"},{"size":1672,"mtime":1611943607229,"results":"20","hashOfConfig":"16"},{"size":750,"mtime":1611943607230,"results":"21","hashOfConfig":"16"},{"size":2496,"mtime":1612143940118,"results":"22","hashOfConfig":"16"},{"size":3583,"mtime":1611943607216,"results":"23","hashOfConfig":"16"},{"size":1882,"mtime":1611943607206,"results":"24","hashOfConfig":"16"},{"size":1334,"mtime":1612153007797,"results":"25","hashOfConfig":"16"},{"size":3042,"mtime":1611943607212,"results":"26","hashOfConfig":"16"},{"size":2121,"mtime":1612153149332,"results":"27","hashOfConfig":"16"},{"size":1440,"mtime":1611943607207,"results":"28","hashOfConfig":"16"},{"size":2632,"mtime":1612153722443,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kqevk0",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/index.js",[],["67","68"],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/App.js",["69"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginFormPage from './components/LoginFormPage';\nimport SignupFormPage from './components/SignupFormPage';\nimport * as sessionActions from './store/session';\nimport Navigation from './components/Navigation';\nimport MainPage from './components/MainPage';\nimport Picture from './components/Picture';\nimport configureStore from './store';\nimport PictureUploadForm from './components/PictureUploadForm';\nimport UserPage from './components/UserPage';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch])\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginFormPage />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n          <Route exact path=\"/users/:userId\">\n            <UserPage />\n          </Route>\n          <Route exact path=\"/pictures\" >\n            <PictureUploadForm />\n          </Route>\n          <Route exact path=\"/pictures/:pictureId\" >\n            <Picture />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/picture.js",["70","71","72"],"import { fetch } from './csrf';\n\nconst LOAD = 'picture/LOAD';\nconst UPLOAD = 'picture/UPLOAD';\nconst PICTURE_LOAD = 'picture/PICTURE_UPLOAD';\nconst GET_USER_INFO = 'session/GET_USER_INFO';\n\nconst load = pictures => ({\n    type: LOAD,\n    pictures,\n});\n\nexport const addAPicture = (picture) => {\n    return {\n        type: UPLOAD,\n        picture,\n    }\n}\n\nexport const loadOnePicture = (picture) => {\n    return {\n        type: PICTURE_LOAD,\n        picture,\n    }\n}\n\nconst getInfo = (info) => {\n    return {\n        type: GET_USER_INFO,\n        info,\n    }\n}\n\nexport const getPictures = () => async dispatch => {\n    const response = await fetch(`/api/`)\n    const responseData = response.data.pictures;\n    dispatch(load(responseData));\n};\n\nexport const getOnePicture = (pictureId) => async dispatch => {\n    const response = await fetch(`/api/pictures/${pictureId}`);\n    const responseData = await response.data;\n    dispatch(loadOnePicture(responseData))\n}\n\n\n// Code that can be used for something else\n// const response = await fetch(`/api/pictures`, {\n//     method: 'POST',\n//     body: JSON.stringify({\n//         image,\n//         title,\n//         description,\n//         userId,\n//     }),\n// });\n\nexport const uploadPicture = (picture) => async (dispatch) => {\n    const  { image, title, description, userId } = picture;\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"userId\", userId);\n    if (image) formData.append(\"image\", image);\n\n    let entryObj = {};\n\n    for (let entry of formData.entries()) {\n        let key = entry[0];\n        let value = entry[1];\n    }\n\n\n\n\n    const response = await fetch(`/api/pictures/`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"multipart/form-data\",\n        },\n        body: formData,\n    });\n    dispatch(addAPicture(response.data.picture));\n};\n\n\nexport const getUserInfo = (userId) => async (dispatch) => {\n    const response = await fetch(`/api/users/${userId}`, {\n        method: 'GET',\n    });\n    const responseData = response.data;\n\n    dispatch(getInfo(responseData))\n    return responseData;\n}\n\n// if (response.ok) {\n//     const picture = await response.json();\n//     dispatch(addAPicture(picture));\n//     return picture;\n// }\n\n//------\n\nconst intiialState = {}\n\nconst pictureReducer = (state = intiialState, action) => {\n    let newState;\n    switch(action.type) {\n        case LOAD: {\n            newState = [];\n            action.pictures.forEach(pic => {\n                newState[pic.id] = pic\n            })\n            return newState;\n        }\n        case UPLOAD: {\n            newState = Object.assign({}, state);\n            newState[action.picture.id] = action.picture\n            return newState;\n        }\n        case PICTURE_LOAD: {\n            newState = action.picture;\n            return newState;\n        }\n        case GET_USER_INFO:\n            newState = action.info;\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default pictureReducer;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/session.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/csrf.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/store/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/index.js",["73"],"import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\nimport logo from '../../assets/PicturePerfectLogo.png';\n\nfunction Navigation({ isLoaded }) {\n    const [myPage, setMyPage] = useState(0);\n\n    const sessionUser = useSelector(state => state.session.user);\n\n    let sessionLinks;\n    if (sessionUser) {\n        sessionLinks = (\n            <ProfileButton user={sessionUser} />\n        );\n    } else {\n        sessionLinks = (\n            <>\n                <NavLink to=\"/login\" style={{ textDecoration: \"none\" }}>Log In</NavLink>\n                <NavLink to=\"/signup\" style={{ textDecoration: \"none\" }}>Sign Up</NavLink>\n            </>\n        );\n    }\n\n    useEffect(() => {\n        if (sessionUser) {\n            setMyPage(sessionUser.id || 0)\n        }\n    })\n\n    return (\n        <nav className=\"navbar\">\n            <a href=\"/\"><img className=\"logo\" src={logo} alt=\"logo\" /></a>\n            <br></br>\n            <NavLink className=\"navbar-link\" exact to={`/users/${myPage}`} style={{ textDecoration: \"none\", padding: \"0 0 0 10px\" }}>My Page</NavLink>\n            <NavLink className=\"navbar-link\" exact to=\"/pictures\" style={{ textDecoration: \"none\", padding: \"0 0 0 10px\" }}>Upload a picture!</NavLink>\n            {isLoaded && sessionLinks}\n        </nav>\n    );\n}\n\nexport default Navigation;\n\n// import React from 'react';\n// import { NavLink } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import ProfileButton from './ProfileButton';\n// import './Navigation.css';\n\n// function Navigation({ isLoaded }) {\n//     const sessionUser = useSelector(state => state.session.user);\n\n//     let sessionLinks;\n//     if (sessionUser) {\n//         sessionLinks = (\n//             <ProfileButton user={sessionUser} />\n//         );\n//     } else {\n//         sessionLinks = (\n//             <>\n//                 <i class=\"fas fa-glass-cheers\"></i>\n//                 <NavLink to=\"/login\"><i class=\"fas fa-lock\"></i></NavLink>\n//                 <NavLink to=\"/signup\"><i class=\"fas fa-user-plus\"></i></NavLink>\n//             </>\n//         );\n//     }\n\n//     return (\n//         <ul>\n//             <li>\n//                 <NavLink exact to=\"/\" className=\"navbar\">Home</NavLink>\n//                 {isLoaded && sessionLinks}\n//             </li>\n//         </ul>\n//     );\n// }\n\n// export default Navigation;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/SignupFormPage/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/LoginFormPage/index.js",[],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/MainPage/index.js",["74","75"],"import React, { useEffect, useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport * as pictureActions from '../../store/picture';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MainPage.css';\n\n//import data\n// use effect to dispatch a thunk that fetches all images.\n// use selector to subscribe to images/get access to pictures\n// map over pictures to renders\n\n//Needs to show all of the pictures that have been uploaded.\n    //Preferably in order from newest to oldest.\n\nconst MainPage = () => {\n    const dispatch = useDispatch();\n    const { getPictures } = pictureActions;\n\n    useEffect(() => {\n        dispatch(getPictures())\n    }, [dispatch, getPictures])\n    const pictures = useSelector((state) => state.picture);\n\n    return (\n    <>\n        <h1>Main Page!</h1>\n            <div className=\"picture-cluster\">\n            { pictures !== undefined && pictures.length > 1 && pictures.map((pics) => \n                <a href={`/pictures/${pics.id}`} key={pics.id}>\n                    {/* <label>Uploaded by {pics.userId}</label> */}\n                    <br></br>\n                    <img className=\"uploaded-picture\" src={pics.imageLink} alt=\"uploaded\" />\n                    <br></br>\n                </a>\n            )}\n            </div>\n    </>)\n}\n\nexport default MainPage;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/PictureUploadForm/index.js",["76","77"],"import React, { useEffect, useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport * as pictureActions from '../../store/picture';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './PictureUploadForm.css';\nimport { Redirect, useHistory } from 'react-router-dom';\n\n// Form needs to contain input for\n    //the image source\n    //a title for the image (optional)\n    //a description for the image (optional)\n    //any tags associated with the image (optional)\n\n    //posts to: TBD\n\nconst PictureUploadForm = () => {\n    const sessionUser = useSelector((state) => state.session.user);\n\n    const [image, setImage] = useState(null);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    // const [tags, setTags] = useState([]);\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    // const picture = useSelector((state) => state.picture);\n\n\n\n    if (!sessionUser) return <Redirect to=\"/login\" />;\n\n    const userId = sessionUser.id;\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        return dispatch(pictureActions.uploadPicture({ image, title, description, userId })).then(() => history.push('/'))\n    }\n\n    const updateFile = (e) => {\n        const file = e.target.files[0];\n        if (file) setImage(file);\n    };\n\n    return (\n        <>\n            <h1>Picture Upload!!!</h1>\n            <form onSubmit={handleSubmit} className=\"picture-upload-form\" action=\"/\" method=\"POST\">\n                <label>\n                    Upload an image!\n                    <br></br>\n                    <input \n                        type=\"file\" \n                        accept=\"image/png, image/jpeg\"\n                        // onChange={(e) => setImage(e.target.value)} \n                        // onChange={(e) => setImage(`http://${e.target.files.name}`)} \n                        onChange={updateFile} \n                    />\n                    \n                    \n                </label>\n                <br></br>\n                <br></br>\n                <label>\n                    Title:\n                    <br></br>\n                    <input \n                        type=\"text\" \n                        onChange={(e) => setTitle(e.target.value)} \n                        value={title} \n                    />\n                    <br></br>\n                    <br></br>\n                    <label>\n                    Description:\n                    <br></br>\n                    <textarea \n                        className=\"description\"\n                        type=\"text\"\n                        onChange={(e) => setDescription(e.target.value)}\n                        value={description}\n                    />\n                    </label>\n                </label>\n                <br></br>\n                <br></br>\n                <button disabled={!image ? true : false} type=\"submit\">Add your picture!</button>\n            </form>\n        </>\n    )\n}\n\nexport default PictureUploadForm;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Picture/index.js",["78","79"],"import React, { useEffect, useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Picture.css';\nimport { useParams } from 'react-router-dom';\nimport * as pictureActions from '../../store/picture';\n\n//Will use useParams to get the pictureId.\n//Needs to display\n     //the image\n     //who uploaded it\n     //any descriptions or tags\n     //comments\n\nconst Picture = () => {\n    const { pictureId } = useParams();\n    const dispatch = useDispatch();\n    const picture = useSelector((state) => state.picture.picture);\n    const thisUser = useSelector((state) => state.picture.user);\n    const [username, setUsername] = useState('')\n    const [userId, setUserId] = useState(0);\n\n    const { getOnePicture } = pictureActions;\n\n    useEffect(() => {\n        dispatch(getOnePicture(pictureId))\n    }, [dispatch, getOnePicture, pictureId])\n\n    useEffect(() => {\n        if (thisUser) {\n            setUsername(thisUser.username || '');\n            setUserId(thisUser.id || 0);\n        }\n    })\n\n    // const correctPicture = pictures.find((pic) => pic.id === pictureId)\n\n    // const loadedPictures = pictures.length > 0 ? pictures : null;\n    \n    return (\n        <>\n            {/* <h1>Pictures!!!</h1> */}\n            <h1>Uploaded by <a href={`/users/${userId}`}>{username}</a></h1>\n            { picture !== undefined && \n            <div className=\"picture-div\">\n                <h2 className=\"title\">{picture.title}</h2>\n                <img className=\"uploaded-picture\" src={picture.imageLink} alt=\"uploaded\" />\n                <div className=\"description-area\">{picture.description}</div>\n            </div>\n            }\n            {/* { pictures !== undefined && pictures.length > 1 && pictures.map((pics) => <a href={`/pictures/${pics.id}`}><img className=\"uploaded-picture\" src={pics.imageLink} alt=\"uploaded\" /></a>)} */}\n            {/* { pictures !== undefined && pictures.length > 1 && <img className=\"uploaded-picture\" src={correctPicture.imageLink} alt=\"uploaded\" /> } */}\n        </>\n    )\n}\n\nexport default Picture;","/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js",[],["80","81"],"/Users/matthewhasan/Project/React-Solo-Project/frontend/src/components/UserPage/index.js",["82"],"import React, { useEffect, useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './UserPage.css';\nimport { useParams } from 'react-router-dom';\nimport * as pictureActions from '../../store/picture';\n\n//Will use useParams to get the pictureId.\n//Needs to display\n//the image\n//who uploaded it\n//any descriptions or tags\n//comments\n\n//Will use useParams to get the userId.\n    //Needs to display\n        //the username\n        //their pictures\n        //their albums\n            //If they are the logged in user:\n                //a create an album button.\n\n//THIS IS NOT THE CORRECT CODE\n\nconst UserPage = () => {\n    const { userId } = useParams();\n    const sessionUser = useSelector((state) => state.session.user);\n\n    const dispatch = useDispatch();\n    const pictureArray = useSelector((state) => state.picture.pictures);\n    const thisUser = useSelector((state) => state.picture.user);\n    const [username, setUsername] = useState('')\n    const [pictures, setPictures] = useState([]);\n    const { getUserInfo } = pictureActions;\n\n\n    // const { getPictures, getOnePicture } = pictureActions;\n    useEffect(() => {\n        dispatch(getUserInfo(userId))\n    }, [dispatch, getUserInfo, userId])\n\n\n    useEffect(() => {\n        if (thisUser) {\n            setUsername(thisUser.username || '');\n        }\n        if (pictureArray) {\n            setPictures(pictureArray || [])\n        }\n    }, [thisUser, pictureArray])\n\n\n    // const correctPicture = pictures.find((pic) => pic.id === pictureId)\n\n    // const loadedPictures = pictures.length > 0 ? pictures : null;\n\n    // if (loadedPictures > 0) {\n    //     const correctPicture = loadedPictures.find((pic) => pic.id === pictureId)\n    // }\n\n    console.log(username)\n\n    return (\n        <>\n            {username ? <h1>User Page for {username}</h1> : <h1>User not found!</h1>}\n            {/* <h1>Pictures!!!</h1> */}\n            {/* { picture !== undefined && <img className=\"uploaded-picture\" src={picture.imageLink} alt=\"uploaded\" />} */}\n            { pictures !== undefined && pictures.length > 0 && pictures.map((pics) => <a href={`/pictures/${pics.id}`} className=\"user-pics\"><img className=\"uploaded-picture\" src={pics.imageLink} alt=\"uploaded\" /></a>)}\n            <br></br>\n            {sessionUser && Number(userId) === Number(sessionUser.id) && <button>MY PAGE</button>}\n            {/* { pictures !== undefined && pictures.length > 1 && <img className=\"uploaded-picture\" src={correctPicture.imageLink} alt=\"uploaded\" /> } */}\n        </>\n    )\n}\n\nexport default UserPage;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":10,"column":8,"nodeType":"89","messageId":"90","endLine":10,"endColumn":22},{"ruleId":"87","severity":1,"message":"91","line":66,"column":9,"nodeType":"89","messageId":"90","endLine":66,"endColumn":17},{"ruleId":"87","severity":1,"message":"92","line":69,"column":13,"nodeType":"89","messageId":"90","endLine":69,"endColumn":16},{"ruleId":"87","severity":1,"message":"93","line":70,"column":13,"nodeType":"89","messageId":"90","endLine":70,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":27,"column":5,"nodeType":"89","endLine":27,"endColumn":14,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"98","line":2,"column":13,"nodeType":"89","messageId":"90","endLine":2,"endColumn":27},{"ruleId":"87","severity":1,"message":"99","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"98","line":2,"column":13,"nodeType":"89","messageId":"90","endLine":2,"endColumn":27},{"ruleId":"87","severity":1,"message":"98","line":2,"column":13,"nodeType":"89","messageId":"90","endLine":2,"endColumn":27},{"ruleId":"94","severity":1,"message":"100","line":29,"column":5,"nodeType":"89","endLine":29,"endColumn":14,"suggestions":"101"},{"ruleId":"83","replacedBy":"102"},{"ruleId":"85","replacedBy":"103"},{"ruleId":"87","severity":1,"message":"98","line":2,"column":13,"nodeType":"89","messageId":"90","endLine":2,"endColumn":27},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'configureStore' is defined but never used.","Identifier","unusedVar","'entryObj' is assigned a value but never used.","'key' is assigned a value but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMyPage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [sessionUser] as a second argument to the useEffect Hook.",["106"],"'useState' is defined but never used.","'sessionActions' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect contains a call to 'setUsername'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [thisUser] as a second argument to the useEffect Hook.",["107"],["104"],["105"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Add dependencies array: [sessionUser]",{"range":"112","text":"113"},"Add dependencies array: [thisUser]",{"range":"114","text":"115"},[921,921],", [sessionUser]",[1076,1076],", [thisUser]"]